{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\monik\\\\Desktop\\\\it-learning\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React from 'react';\nimport basicValidates from './basicValidates';\nimport { TextField } from '@material-ui/core';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super();\n\n    this.validateInputs = () => {\n      const errors = {};\n      const values = this.state.values;\n      this.state.inputs.forEach(el => {\n        if (typeof el.validate === 'function') {\n          const isError = el.validate(values[el.key], values);\n\n          if (isError === true) {\n            errors[el.key] = true;\n          }\n\n          if (typeof isError === 'object') {\n            if (isError.isError === true) {\n              errors[el.key] = true;\n            }\n\n            values[el.key] = isError.newValue;\n          }\n        }\n      });\n      this.setState({\n        errors,\n        values\n      });\n      return Object.values(errors).includes(true);\n    };\n\n    this.submit = callback => {\n      let canCallCallback = true;\n\n      if (this.props.validateOnSubmit) {\n        canCallCallback = !this.validateInputs();\n      }\n\n      if (canCallCallback) {\n        callback(this.state.values);\n        return true;\n      }\n    };\n\n    this.clean = () => {\n      const errors = {};\n      const values = Object.keys(this.state.values).reduce((red, el) => {\n        return Object.assign(red, {\n          [el]: ''\n        });\n      }, {});\n      this.setState({\n        errors,\n        values\n      });\n    };\n\n    this.getInputsValues = () => this.state.values;\n\n    this.onChange = (key, validate, alwaysValidate, alwaysAllValidate, dontValidateIfBug, valueFunc) => evt => {\n      let value = typeof valueFunc === 'function' ? valueFunc(evt.target.value) : evt.target.value;\n\n      if (alwaysAllValidate) {\n        this.setState({\n          values: { ...this.state.values,\n            [key]: value\n          }\n        }, this.validateInputs);\n        return;\n      }\n\n      const errors = {};\n\n      if (alwaysValidate || this.state.errors[key] && !dontValidateIfBug) {\n        const isError = validate(value, this.state.values);\n        errors[key] = isError;\n\n        if (typeof isError === 'object') {\n          errors[key] = isError.isError;\n          value = isError.newValue;\n        }\n      }\n\n      this.setState({\n        values: { ...this.state.values,\n          [key]: value\n        },\n        errors: { ...this.state.errors,\n          ...errors\n        }\n      });\n    };\n\n    const _values = props.inputs.reduce((red, el) => {\n      return Object.assign(red, {\n        [el.key]: ''\n      });\n    }, {});\n\n    const inputs = props.inputs.map(el => {\n      if (!el.key) {\n        console.error('YOU DIDNT ADD KEY TO INPUT!! ADD IT!');\n        el.key = Math.random().toString(36).substring(2, 15);\n      }\n\n      if (typeof el.props === 'object') {\n        delete el.props.value;\n        delete el.props.onChange;\n      } else {\n        el.props = {};\n      }\n\n      if (typeof el.validate === 'string') {\n        el.validate = basicValidates(el.validate);\n      }\n\n      return el;\n    });\n    const eachInputProps = props.eachInputProps || {};\n    delete eachInputProps.value;\n    delete eachInputProps.onChange;\n    this.state = {\n      inputs,\n      values: _values,\n      errors: {},\n      eachInputProps\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", Object.assign({\n      onSubmit: evt => evt.preventDefault()\n    }, this.props.formProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }), this.state.inputs.map(el => /*#__PURE__*/React.createElement(TextField, Object.assign({\n      key: el.key,\n      value: this.state.values[el.key],\n      onChange: this.onChange(el.key, el.validate, el.alwaysValidate, el.alwaysAllValidate, el.dontValidateIfBug, el.valueFunc),\n      error: this.state.errors[el.key],\n      helperText: this.state.errors[el.key] ? el.errorText : el.helperText\n    }, this.state.eachInputProps, el.props, {\n      style: { ...this.state.eachInputProps.style,\n        ...el.props.style\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/monik/Desktop/it-learning/src/components/Form/Form.js"],"names":["React","basicValidates","TextField","Form","Component","constructor","props","validateInputs","errors","values","state","inputs","forEach","el","validate","isError","key","newValue","setState","Object","includes","submit","callback","canCallCallback","validateOnSubmit","clean","keys","reduce","red","assign","getInputsValues","onChange","alwaysValidate","alwaysAllValidate","dontValidateIfBug","valueFunc","evt","value","target","map","console","error","Math","random","toString","substring","eachInputProps","render","preventDefault","formProps","errorText","helperText","style"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport basicValidates from './basicValidates'\n\nimport { TextField } from '@material-ui/core'\n\nclass Form extends React.Component {\n  constructor(props) {\n    super()\n\n    const values = props.inputs.reduce((red, el) => {\n      return Object.assign(red, { [el.key]: '' })\n    }, {})\n\n    const inputs = props.inputs.map(el => {\n      if (!el.key) {\n        console.error('YOU DIDNT ADD KEY TO INPUT!! ADD IT!')\n        el.key = Math.random().toString(36).substring(2, 15)\n      }\n      if (typeof el.props === 'object') {\n        delete el.props.value\n        delete el.props.onChange\n      } else {\n        el.props = {}\n      }\n\n      if (typeof el.validate === 'string') {\n        el.validate = basicValidates(el.validate)\n      }\n\n      return el\n    })\n\n    const eachInputProps = props.eachInputProps || {}\n    delete eachInputProps.value\n    delete eachInputProps.onChange\n\n    this.state = {\n      inputs,\n      values,\n      errors: {},\n      eachInputProps\n    }\n  }\n\n  validateInputs = () => {\n    const errors = {}\n    const values = this.state.values\n    this.state.inputs.forEach(el => {\n      if (typeof el.validate === 'function') {\n        const isError = el.validate(values[el.key], values)\n        if (isError === true) {\n          errors[el.key] = true\n        }\n        if (typeof isError === 'object') {\n          if (isError.isError === true) {\n            errors[el.key] = true\n          }\n          values[el.key] = isError.newValue\n        }\n      }\n    })\n    this.setState({ errors, values })\n    return Object.values(errors).includes(true)\n  }\n\n  submit = (callback) => {\n    let canCallCallback = true\n    if (this.props.validateOnSubmit) {\n      canCallCallback = !this.validateInputs()\n    }\n    if (canCallCallback) {\n      callback(this.state.values)\n      return true\n    }\n  }\n\n  clean = () => {\n    const errors = {}\n    const values = Object.keys(this.state.values).reduce((red, el) => {\n      return Object.assign(red, { [el]: '' })\n    }, {})\n\n    this.setState({ errors, values })\n  }\n\n  getInputsValues = () => this.state.values\n\n  onChange = (key, validate, alwaysValidate, alwaysAllValidate, dontValidateIfBug, valueFunc) => evt => {\n    let value = typeof valueFunc === 'function' ? valueFunc(evt.target.value) : evt.target.value\n\n    if (alwaysAllValidate) {\n      this.setState({ values: { ...this.state.values, [key]: value } }, this.validateInputs)\n      return\n    }\n\n    const errors = {}\n    if (alwaysValidate || (this.state.errors[key] && !dontValidateIfBug)) {\n      const isError = validate(value, this.state.values)\n      errors[key] = isError\n      if (typeof isError === 'object') {\n        errors[key] = isError.isError\n        value = isError.newValue\n      }\n    }\n    this.setState({ values: { ...this.state.values, [key]: value }, errors: { ...this.state.errors, ...errors } })\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={evt => evt.preventDefault()}\n        {...this.props.formProps}\n      >\n        {this.state.inputs.map(el => (\n          <TextField\n            key={el.key}\n            value={this.state.values[el.key]}\n            onChange={this.onChange(el.key, el.validate, el.alwaysValidate, el.alwaysAllValidate, el.dontValidateIfBug, el.valueFunc)}\n            error={this.state.errors[el.key]}\n            helperText={this.state.errors[el.key] ? el.errorText : el.helperText}\n            {...this.state.eachInputProps}\n            {...el.props}\n            style={{ ...this.state.eachInputProps.style, ...el.props.style }}\n          />\n        ))}\n      </form>\n    )\n  }\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}