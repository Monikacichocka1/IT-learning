{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\monik\\\\Desktop\\\\it-learning\\\\src\\\\views\\\\SaveForm.js\";\nimport React from 'react';\nimport { Paper, Button, TextField, MenuItem, Snackbar, Typography, SnackbarContent } from '@material-ui/core';\nimport Form from '../components/Form';\nconst styles = {\n  root: {\n    padding: 30,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  input: {\n    marginBottom: 20,\n    width: 230\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n};\nconst telAllowCharacters = ' ()+-0123456789'.split('');\n\nclass SaveForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      select: '',\n      selectItems: ['Java', 'Python', 'C++', 'C#'],\n      isSelectError: false,\n      description: '',\n      openSnackbar: false\n    };\n    this.inputs = [{\n      key: 'firstname',\n      validate: 'minLength:3',\n      errorText: 'Minimum 3 znaki',\n      props: {\n        label: 'Imię'\n      },\n      valueFunc: value => value.length > 15 ? value.substring(0, value.length - 1) : value\n    }, {\n      key: 'lastname',\n      validate: 'minLength:3',\n      errorText: 'Minimum 3 znaki',\n      props: {\n        label: 'Nazwisko'\n      },\n      valueFunc: value => value.length > 25 ? value.substring(0, value.length - 1) : value\n    }, {\n      key: 'email',\n      validate: 'email',\n      errorText: 'Wprowadź prawidłowy adres e-mail',\n      props: {\n        label: 'Email'\n      }\n    }, {\n      key: 'tel',\n      validate: 'minLength:7',\n      valueFunc: value => {\n        if ((!value || telAllowCharacters.includes(value[value.length - 1])) && value.length < 13) {\n          return value;\n        } else {\n          return value.substring(0, value.length - 1);\n        }\n      },\n      errorText: 'Wprowadź prawidłowy numer telefonu',\n      props: {\n        label: 'Numer telefonu'\n      }\n    }];\n\n    this.submit = () => {\n      const isSelectError = !this.state.select;\n      const isError = this.form.validateInputs();\n\n      if (!isError && !isSelectError) {\n        this.form.clean();\n        this.setState({\n          select: '',\n          description: '',\n          openSnackbar: true\n        });\n      } else {\n        this.setState({\n          isSelectError\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Paper, {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Zapisz si\\u0119\"), /*#__PURE__*/React.createElement(Form, {\n      ref: ref => this.form = ref,\n      inputs: this.inputs,\n      eachInputProps: {\n        variant: 'outlined',\n        style: styles.input\n      },\n      formProps: {\n        style: styles.form\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      value: this.state.select,\n      style: styles.input,\n      onChange: evt => {\n        this.setState({\n          select: evt.target.value\n        });\n        evt.target.value && this.state.isSelectError && this.setState({\n          isSelectError: false\n        });\n      },\n      label: \"Wybierz kurs\",\n      variant: \"outlined\",\n      select: true,\n      error: this.state.isSelectError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, this.state.selectItems.map(el => /*#__PURE__*/React.createElement(MenuItem, {\n      key: el,\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, el))), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      style: styles.input,\n      label: \"Uwagi\",\n      value: this.state.description,\n      onChange: evt => this.setState({\n        description: evt.target.value\n      }),\n      multiline: true,\n      rows: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"Zapisz\"), /*#__PURE__*/React.createElement(Snackbar, {\n      style: {\n        backgroundColor: 'green'\n      },\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: this.state.openSnackbar,\n      autoHideDuration: 7000,\n      onClose: (evt, reason) => reason !== 'clickaway' && this.setState({\n        openSnackbar: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SnackbarContent, {\n      style: {\n        backgroundColor: 'green'\n      },\n      message: \"Zapisali\\u015Bmy Twoje dane! Wkr\\xF3tce dostaniesz wiadomo\\u015B\\u0107 z propozycj\\u0105 szkolenia.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default SaveForm;","map":{"version":3,"sources":["C:/Users/monik/Desktop/it-learning/src/views/SaveForm.js"],"names":["React","Paper","Button","TextField","MenuItem","Snackbar","Typography","SnackbarContent","Form","styles","root","padding","display","flexDirection","alignItems","input","marginBottom","width","form","telAllowCharacters","split","SaveForm","Component","state","select","selectItems","isSelectError","description","openSnackbar","inputs","key","validate","errorText","props","label","valueFunc","value","length","substring","includes","submit","isError","validateInputs","clean","setState","render","ref","variant","style","evt","target","map","el","backgroundColor","vertical","horizontal","reason"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Paper, Button, TextField, MenuItem, Snackbar, Typography, SnackbarContent } from '@material-ui/core'\n\nimport Form from '../components/Form'\n\nconst styles = {\n  root: {\n    padding: 30,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  input: {\n    marginBottom: 20,\n    width: 230\n  },\n  form: {\n    display: 'flex', flexDirection: 'column'\n  },\n}\n\nconst telAllowCharacters = ' ()+-0123456789'.split('')\n\nclass SaveForm extends React.Component {\n  state = {\n    select: '',\n    selectItems: ['Java', 'Python', 'C++', 'C#'],\n    isSelectError: false,\n    description: '',\n    openSnackbar: false,\n  }\n\n  inputs = [\n    {\n      key: 'firstname', validate: 'minLength:3', errorText: 'Minimum 3 znaki', props: { label: 'Imię' },\n      valueFunc: value => value.length > 15 ? value.substring(0, value.length - 1) : value\n    },\n    {\n      key: 'lastname', validate: 'minLength:3', errorText: 'Minimum 3 znaki', props: { label: 'Nazwisko' },\n      valueFunc: value => value.length > 25 ? value.substring(0, value.length - 1) : value\n    },\n    { key: 'email', validate: 'email', errorText: 'Wprowadź prawidłowy adres e-mail', props: { label: 'Email' } },\n    {\n      key: 'tel',\n      validate: 'minLength:7',\n      valueFunc: value => {\n        if ((!value || telAllowCharacters.includes(value[value.length - 1])) && value.length < 13) {\n          return value\n        } else {\n          return value.substring(0, value.length - 1)\n        }\n      },\n      errorText: 'Wprowadź prawidłowy numer telefonu',\n      props: { label: 'Numer telefonu' }\n    }\n  ]\n\n  submit = () => {\n    const isSelectError = !this.state.select\n    const isError = this.form.validateInputs()\n\n    if (!isError && !isSelectError) {\n      this.form.clean()\n      this.setState({\n        select: '',\n        description: '',\n        openSnackbar: true\n      })\n    } else {\n      this.setState({ isSelectError })\n    }\n  }\n\n  render() {\n\n    return (\n      <Paper style={styles.root}>\n        <Typography variant='h4' gutterBottom>Zapisz się</Typography>\n        <Form\n          ref={ref => this.form = ref}\n          inputs={this.inputs}\n          eachInputProps={{\n            variant: 'outlined',\n            style: styles.input\n          }}\n          formProps={{ style: styles.form }}\n        />\n        <TextField\n          value={this.state.select}\n          style={styles.input}\n          onChange={evt => {\n            this.setState({ select: evt.target.value })\n            evt.target.value && this.state.isSelectError && this.setState({ isSelectError: false })\n          }}\n          label='Wybierz kurs'\n          variant='outlined'\n          select\n          error={this.state.isSelectError}\n        >\n          {this.state.selectItems.map(el => (\n            <MenuItem\n              key={el}\n              value={el}\n            >{el}</MenuItem>\n          ))}\n\n        </TextField>\n        <TextField\n          variant='outlined'\n          style={styles.input}\n          label='Uwagi'\n          value={this.state.description}\n          onChange={evt => this.setState({ description: evt.target.value })}\n          multiline\n          rows={3}\n        />\n        <Button\n          variant='outlined'\n          color='primary'\n          onClick={this.submit}\n        >\n          Zapisz\n        </Button>\n        <Snackbar\n          style={{ backgroundColor: 'green' }}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.openSnackbar}\n          autoHideDuration={7000}\n          onClose={(evt, reason) => reason !== 'clickaway' && this.setState({ openSnackbar: false })}\n        >\n          <SnackbarContent\n            style={{ backgroundColor: 'green' }}\n            message='Zapisaliśmy Twoje dane! Wkrótce dostaniesz wiadomość z propozycją szkolenia.'\n          />\n\n        </Snackbar>\n      </Paper >\n    )\n  }\n}\n\nexport default SaveForm"]},"metadata":{},"sourceType":"module"}